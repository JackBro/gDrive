/* soapStub.h
   Generated by gSOAP 2.7.14 from vDrive.h
   Copyright(C) 2000-2009, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/

#ifndef soapStub_H
#define soapStub_H
#include "stdsoap2.h"
#ifdef __cplusplus
extern "C" {
#endif

/******************************************************************************\
 *                                                                            *
 * Enumerations                                                               *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Classes and Structs                                                        *
 *                                                                            *
\******************************************************************************/


#if 0 /* volatile type: do not redeclare here */

#endif

#ifndef SOAP_TYPE_xsd__base64Binary
#define SOAP_TYPE_xsd__base64Binary (7)
/* Base64 schema type: */
struct xsd__base64Binary
{
	unsigned char *__ptr;
	int __size;
	char *id;	/* optional element of type xsd:string */
	char *type;	/* optional element of type xsd:string */
	char *options;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__FileInfo
#define SOAP_TYPE_ns1__FileInfo (11)
/* ns1:FileInfo */
struct ns1__FileInfo
{
	int attributes;	/* required element of type xsd:int */
	LONG64 id;	/* required element of type xsd:long */
	char *name;	/* optional element of type xsd:string */
	LONG64 size;	/* required element of type xsd:long */
};
#endif

#ifndef SOAP_TYPE__ns1__getFile
#define SOAP_TYPE__ns1__getFile (13)
/* ns1:getFile */
struct _ns1__getFile
{
	char *path;	/* required element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE__ns1__getFileResponse
#define SOAP_TYPE__ns1__getFileResponse (14)
/* ns1:getFileResponse */
struct _ns1__getFileResponse
{
	struct ns1__FileInfo *getFileReturn;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type ns1:FileInfo */
};
#endif

#ifndef SOAP_TYPE__ns1__getFiles
#define SOAP_TYPE__ns1__getFiles (16)
/* ns1:getFiles */
struct _ns1__getFiles
{
	char *path;	/* required element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE__ns1__getFilesResponse
#define SOAP_TYPE__ns1__getFilesResponse (17)
/* ns1:getFilesResponse */
struct _ns1__getFilesResponse
{
	int __sizegetFilesReturn;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* sequence of elements <getFilesReturn> */
	struct ns1__FileInfo *getFilesReturn;	/* required element of type ns1:FileInfo */
};
#endif

#ifndef SOAP_TYPE__ns1__getFileContent
#define SOAP_TYPE__ns1__getFileContent (18)
/* ns1:getFileContent */
struct _ns1__getFileContent
{
	char *path;	/* required element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE__ns1__getFileContentResponse
#define SOAP_TYPE__ns1__getFileContentResponse (19)
/* ns1:getFileContentResponse */
struct _ns1__getFileContentResponse
{
	struct xsd__base64Binary getFileContentReturn;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:base64Binary */
};
#endif

#ifndef SOAP_TYPE___ns1__getFile
#define SOAP_TYPE___ns1__getFile (23)
/* Operation wrapper: */
struct __ns1__getFile
{
	struct _ns1__getFile *ns1__getFile;	/* optional element of type ns1:getFile */
};
#endif

#ifndef SOAP_TYPE___ns1__getFiles
#define SOAP_TYPE___ns1__getFiles (27)
/* Operation wrapper: */
struct __ns1__getFiles
{
	struct _ns1__getFiles *ns1__getFiles;	/* optional element of type ns1:getFiles */
};
#endif

#ifndef SOAP_TYPE___ns1__getFileContent
#define SOAP_TYPE___ns1__getFileContent (31)
/* Operation wrapper: */
struct __ns1__getFileContent
{
	struct _ns1__getFileContent *ns1__getFileContent;	/* optional element of type ns1:getFileContent */
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (32)
/* SOAP Header: */
struct SOAP_ENV__Header
{
#ifdef WITH_NOEMPTYSTRUCT
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (33)
/* SOAP Fault Code: */
struct SOAP_ENV__Code
{
	char *SOAP_ENV__Value;	/* optional element of type xsd:QName */
	struct SOAP_ENV__Code *SOAP_ENV__Subcode;	/* optional element of type SOAP-ENV:Code */
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (35)
/* SOAP-ENV:Detail */
struct SOAP_ENV__Detail
{
	int __type;	/* any type of element <fault> (defined below) */
	void *fault;	/* transient */
	char *__any;
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (38)
/* SOAP-ENV:Reason */
struct SOAP_ENV__Reason
{
	char *SOAP_ENV__Text;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (39)
/* SOAP Fault: */
struct SOAP_ENV__Fault
{
	char *faultcode;	/* optional element of type xsd:QName */
	char *faultstring;	/* optional element of type xsd:string */
	char *faultactor;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *detail;	/* optional element of type SOAP-ENV:Detail */
	struct SOAP_ENV__Code *SOAP_ENV__Code;	/* optional element of type SOAP-ENV:Code */
	struct SOAP_ENV__Reason *SOAP_ENV__Reason;	/* optional element of type SOAP-ENV:Reason */
	char *SOAP_ENV__Node;	/* optional element of type xsd:string */
	char *SOAP_ENV__Role;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *SOAP_ENV__Detail;	/* optional element of type SOAP-ENV:Detail */
};
#endif

/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/

#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
typedef char *_QName;
#endif

#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (6)
typedef char *_XML;
#endif


/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


#ifdef __cplusplus
}
#endif

#endif

/* End of soapStub.h */
